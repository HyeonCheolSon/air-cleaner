C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //======================================================
   2          // Main program routine
   3          // - Device name  : MC96F8216
   4          // - Package type : 24QFN
   5          //======================================================
   6          // For XDATA variable : V1.041.00 ~
   7          #define   MAIN  1
   8          
   9          // Generated    : Wed, Aug 11, 2021 (12:44:11)
  10          #include  "MC96F8316.h"
  11          #include  "func_def.h"
  12          
  13          unsigned int i;
  14          unsigned int p;
  15          unsigned int count;
  16          unsigned int period;
  17          
  18          unsigned int led_switch = 0;
  19          int temp_pwm = 0x00;
  20          ////////////PWM////////////////
  21          void controlPWM(int num, int pan_power)
  22          {
  23   1        if(num == 0)
  24   1        {
  25   2          T0DR = 0x00;
  26   2        }
  27   1        else if(num == 1)
  28   1        {
  29   2          temp_pwm = 0x8C;
  30   2          T0DR = temp_pwm + 2 * pan_power;
  31   2        }
  32   1        else if(num == 2)
  33   1        {
  34   2          temp_pwm = 0xB0;
  35   2          T0DR = temp_pwm + 2 * pan_power;
  36   2        }
  37   1        else if(num == 3)
  38   1        {
  39   2          temp_pwm = 0xE3;
  40   2          T0DR = temp_pwm + 2 * pan_power;
  41   2        }
  42   1        else if(num == 4)
  43   1        {
  44   2          temp_pwm = 0xFF;
  45   2        }
  46   1        else if(num == 5)
  47   1        {
  48   2          T0DR = 0xFF;
  49   2        }
  50   1      }
  51          int tempMotor = 0x9B;
  52          void controlMotor(int num)
  53          {
  54   1        T0DR = tempMotor + num;
  55   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 2   

  56          //////////////////////////////////
  57          
  58          /////////////////////LED////////////
  59          void onRED()
  60          {
  61   1        offGREEN();
  62   1        offBLUE();
  63   1        P1 |= 0x02;
  64   1      }
  65          void offRED()
  66          {
  67   1        P1 &= 0xFD;
  68   1      }
  69          void onGREEN()
  70          {
  71   1        offRED();
  72   1        offBLUE();
  73   1        P1 |= 0x04;
  74   1      }
  75          void offGREEN()
  76          {
  77   1        P1 &= 0xFB;
  78   1      }
  79          void onBLUE()
  80          {
  81   1        offRED();
  82   1        offGREEN();
  83   1        P1 |= 0x08;
  84   1      }
  85          void offBLUE()
  86          {
  87   1        P1 &= 0xF7;
  88   1      }
  89          void onYELLOW()
  90          {
  91   1        if(led_switch == 0)
  92   1        {
  93   2          onRED();
  94   2        }
  95   1        else
  96   1        {
  97   2          onGREEN();
  98   2        }
  99   1      }
 100          void onMAGENTA()
 101          {
 102   1        if(led_switch == 0)
 103   1        {
 104   2          onRED();
 105   2        }
 106   1        else
 107   1        {
 108   2          onBLUE();
 109   2        }
 110   1      }
 111          
 112          void onCYAN()
 113          {
 114   1        if(led_switch == 0)
 115   1        {
 116   2          onGREEN();
 117   2        }
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 3   

 118   1        else
 119   1        {
 120   2          onBLUE();
 121   2        }
 122   1      }
 123          
 124          void onWHITE()
 125          {
 126   1        for(i = 0; i < 3; i++)
 127   1        {
 128   2          if(i==0)
 129   2          {
 130   3            onRED();
 131   3          }
 132   2          else if(i==1)
 133   2          {
 134   3            onGREEN();
 135   3          }
 136   2          else
 137   2          {
 138   3            onBLUE();
 139   3          }
 140   2        }
 141   1      }
 142          
 143          ///////////////////////////////////
 144          
 145          ////////RELAY//////////////////////
 146          void onRELAY()
 147          {
 148   1        P1 |= 0x20;
 149   1      }
 150          void offRELAY()
 151          {
 152   1        P1 &= 0xDF;
 153   1      }
 154          //////////////////////////////////////
 155          
 156          void delay_10us()
 157          {
 158   1        _nop_(); _nop_(); _nop_(); _nop_(); _nop_();
 159   1        _nop_(); _nop_(); _nop_(); _nop_(); 
 160   1      }
 161          
 162          void delay_sec(int num)
 163          {
 164   1        int i22;
 165   1        int j22;
 166   1        
 167   1        for(j22 = 0; j22 < num ; j22++)
 168   1          for(i22 = 0 ; i22<25000 ; i22++)
 169   1            delay_10us();
 170   1        
 171   1      }
 172          unsigned int led_color = 9;
 173          
 174          // T0 Interrupt///////////////
 175          void TIMER0_Int() interrupt 13
 176          {
 177   1        if(led_switch == 0)
 178   1        {
 179   2          led_switch = 1;
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 4   

 180   2        }
 181   1        else
 182   1        {
 183   2          led_switch = 0;
 184   2        }
 185   1        if(led_color == 0)
 186   1        {
 187   2          onRED();
 188   2        }
 189   1        else if(led_color == 1)
 190   1        {
 191   2          onYELLOW();
 192   2        }
 193   1        else if(led_color == 2)
 194   1        {
 195   2          onGREEN();
 196   2        }
 197   1        else if(led_color == 3)
 198   1        {
 199   2          onCYAN();
 200   2        }
 201   1        else if(led_color == 4)
 202   1        {
 203   2          onBLUE();
 204   2        }
 205   1        else if(led_color == 5)
 206   1        {
 207   2          onMAGENTA();
 208   2        }
 209   1        else if(led_color == 99)
 210   1        {
 211   2          offRED();
 212   2          offBLUE();
 213   2          offGREEN();
 214   2        }
 215   1      }
 216          
 217          /////////////////////////
 218          int tmp = 0x00;
 219          int tmp_count = 0;
 220          int auto_flag = 0;
 221          
 222          void UARTRX_Int() interrupt 9
 223          {
 224   1        // tmp_old = tmp;
 225   1        tmp = UARTDR;
 226   1        
 227   1        //if(tmp == tmp_old)
 228   1        //{
 229   1        //  tmp_count += 1;
 230   1        //  if(tmp_count == 2)
 231   1        //  {
 232   1        //    ctrl_variable = tmp;
 233   1        //    tmp_count = 0;
 234   1        //  }
 235   1        //}
 236   1        //else if(tmp != tmp_old)
 237   1        //{
 238   1        //  tmp_count = 0;
 239   1        //}
 240   1        if(tmp == 0xC0)
 241   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 5   

 242   2          auto_flag = 0;
 243   2        }
 244   1        else if(tmp == 0xD0)
 245   1        {
 246   2          auto_flag = 1;
 247   2        }
 248   1        
 249   1        P3FSR |= 0x01;
 250   1        UARTDR = tmp;
 251   1      }
 252          ///////////////////////////
 253          int pwm_ctrl;
 254          int pan_power;
 255          void main()
 256          {
 257   1        cli();            // disable INT. during peripheral setting
 258   1        port_init();      // initialize ports
 259   1        //clock_init();     // initialize operation clock
 260   1        UART_init();
 261   1        sei();            // enable INT.
 262   1        
 263   1        // TODO: add your main code here
 264   1        T0CR = 0x92; // Timer 0 Control Register - PWM Mode P35
 265   1        
 266   1        //T1CRH = 0x80;
 267   1        //T1CRL = 0x20; // Timer 1 Low Control Register
 268   1        
 269   1        //offRED();
 270   1        //offGREEN();
 271   1        //offBLUE();
 272   1        //onRELAY();
 273   1        //controlPWM(0);
 274   1        IE2 = 0x02;
 275   1        IE1 = 0x08; // Rx Interrupt
 276   1        
 277   1        tmp = 0xFF;
 278   1        T0CR = 0x92;
 279   1      
 280   1        //T1CRL = 0x00;
 281   1        //T1CRH = 0x00;
 282   1        //T2CRL = 0x00;
 283   1        //T2CRH = 0x00;
 284   1        
 285   1        //P1FSRL = 0x00;
 286   1        //P1FSRH = 0x00;
 287   1        
 288   1        // P3FSR = 0x00;
 289   1        
 290   1        //T1ADRH = 0x00;
 291   1        ////T1ADRL = 0x00;
 292   1        //T1BDRH = 0x00;
 293   1        //T1BDRL = 0x00;
 294   1        
 295   1        //T2ADRH = 0x00;
 296   1        //T2ADRL = 0x00;
 297   1        //T2BDRH = 0x00;
 298   1        //T2BDRL = 0x00;
 299   1        
 300   1        // offRELAY();
 301   1        
 302   1        // P3 = 0x20;
 303   1      //  led_color = 3;
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 6   

 304   1      //  controlPWM(1);// red
 305   1      //  led_color = 0;
 306   1      //  delay_sec(20);
 307   1      //  controlPWM(2);
 308   1      //  led_color = 1;// yellow
 309   1      //  delay_sec(20);
 310   1      //  controlPWM(3);
 311   1      //  led_color =2; // green
 312   1      //  delay_sec(20);
 313   1      //  controlPWM(4);
 314   1      //  led_color = 3; // cyan
 315   1      //  delay_sec(20);
 316   1        
 317   1      //  controlPWM(3);
 318   1      //  led_color = 2; // green
 319   1      //  delay_sec(20);
 320   1      //  controlPWM(2);
 321   1      //  led_color = 1; // yellow
 322   1      //  delay_sec(20);
 323   1          UARTDR = 0xFF;
 324   1          T0DR = 0x00;
 325   1          led_color = 4;
 326   1          pwm_ctrl = 0;
 327   1          pan_power = 0;
 328   1        while(1)
 329   1        {
 330   2          
 331   2          // onRELAY();
 332   2          // controlPWM(3);
 333   2          // led_color = 0;
 334   2      
 335   2          
 336   2          
 337   2          // red 0
 338   2          // yellow 1
 339   2          // green 2
 340   2          // cyan 3 
 341   2          // blue 4
 342   2          // magenta 5
 343   2          //controlPWM(4);
 344   2          //tmp = UARTDR;
 345   2          // A0 : off
 346   2          
 347   2          //UARTDR = tmp;
 348   2          if(auto_flag == 0)
 349   2          {
 350   3            switch (tmp)
 351   3            {
 352   4            case 0xF1: // air condition GOOD scenario
 353   4              pwm_ctrl = 1;
 354   4              controlPWM(1, pan_power);
 355   4              led_color = 3; //cyan
 356   4              onRELAY();
 357   4              tmp = 0x00;
 358   4              break;
 359   4            case 0xF2: // air condition SOSO scenario
 360   4              pwm_ctrl = 2;
 361   4              controlPWM(2, pan_power);
 362   4              led_color = 2; // green
 363   4              onRELAY();
 364   4              tmp = 0x00;
 365   4              break;
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 7   

 366   4            case 0xF3: // air condition BAD scenario
 367   4              pwm_ctrl = 3;
 368   4              controlPWM(3, pan_power);
 369   4              led_color = 1; // yellow
 370   4              onRELAY();
 371   4              tmp = 0x00;
 372   4              break;
 373   4            case 0xF4: // air condition VERY BAD scenario
 374   4              pwm_ctrl = 4;
 375   4              controlPWM(4, pan_power);
 376   4              led_color = 0; // red
 377   4              onRELAY();
 378   4              tmp = 0x00;
 379   4              break;
 380   4            case 0xB1:
 381   4              pan_power = 0;
 382   4              controlPWM(pwm_ctrl, pan_power);
 383   4              tmp = 0x00;
 384   4              break;
 385   4            case 0xB2:
 386   4              pan_power = 1;
 387   4              controlPWM(pwm_ctrl, pan_power);
 388   4              tmp = 0x00;
 389   4              break;
 390   4            case 0xB3:
 391   4              pan_power = 2;
 392   4              controlPWM(pwm_ctrl, pan_power);
 393   4              tmp = 0x00;
 394   4              break;
 395   4            case 0xB4:
 396   4              pan_power = 3;
 397   4              controlPWM(pwm_ctrl, pan_power);
 398   4              tmp = 0x00;
 399   4              break;
 400   4            case 0xB5:
 401   4              pan_power = 4;
 402   4              controlPWM(pwm_ctrl, pan_power);
 403   4              tmp = 0x00;
 404   4              break;
 405   4            case 0xB6:
 406   4              pan_power = 5;
 407   4              controlPWM(pwm_ctrl, pan_power);
 408   4              tmp = 0x00;
 409   4              break;
 410   4            case 0xB7:
 411   4              pan_power = 6;
 412   4              controlPWM(pwm_ctrl, pan_power);
 413   4              tmp = 0x00;
 414   4              break;
 415   4            case 0xB8:
 416   4              pan_power = 7;
 417   4              controlPWM(pwm_ctrl, pan_power);
 418   4              tmp = 0x00;
 419   4              break;
 420   4            case 0xB9:
 421   4              pan_power = 8;
 422   4              controlPWM(pwm_ctrl, pan_power);
 423   4              tmp = 0x00;
 424   4              break;
 425   4            case 0xBA:
 426   4              pan_power = 9;
 427   4              controlPWM(pwm_ctrl, pan_power);
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 8   

 428   4              tmp = 0x00;
 429   4              break;
 430   4            
 431   4            case 0xA0:
 432   4              pwm_ctrl = 0;
 433   4              controlPWM(0, pan_power);
 434   4              led_color = 99; // red
 435   4              offRELAY();
 436   4              tmp = 0x00;
 437   4              break;
 438   4            }
 439   3          }
 440   2          else
 441   2          {
 442   3            if(tmp > 0x00 && tmp < 0x65)
 443   3            {
 444   4              controlMotor(tmp);
 445   4            }
 446   3            else if(tmp == 0xA0)
 447   3            {
 448   4              controlPWM(0, pan_power);
 449   4              led_color = 99; // red
 450   4              offRELAY();
 451   4            }
 452   3          }
 453   2          
 454   2          /*
 455   2          case 0x01: 
 456   2            led_color = 0; // red
 457   2            break;
 458   2          case 0x02: 
 459   2            led_color = 2; // green
 460   2            break;
 461   2          case 0x03: 
 462   2            led_color = 4; // blue
 463   2            break;
 464   2          case 0x04: 
 465   2            led_color = 3; // cyan
 466   2            break;
 467   2          case 0x05: 
 468   2            led_color = 1; // yellow
 469   2            break;
 470   2          case 0x06: 
 471   2            led_color = 5; // magenta
 472   2            break;
 473   2          */
 474   2          
 475   2      
 476   2          //case 0x01: 
 477   2          //  controlPWM(0); // 60% duration
 478   2          //  break;
 479   2          //case 0x02: 
 480   2          //  controlPWM(2); // 70% duration
 481   2          //  break;
 482   2          //case 0x03: 
 483   2          //  controlPWM(3); // 80% duration
 484   2          //  break;
 485   2          //case 0x04: 
 486   2          //  controlPWM(4); // 90% duration
 487   2          //  break;
 488   2          //case 0x05: 
 489   2          //  controlPWM(5); // 100% duration
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 9   

 490   2          //  break;
 491   2          
 492   2          //case 0x21: 
 493   2          //  onRELAY(); // relay on
 494   2          //  break;
 495   2          //case 0x22: 
 496   2          //  offRELAY(); // relay off
 497   2          //  break;
 498   2          /*
 499   2          
 500   2          */
 501   2        }
 502   1      }
 503          
 504          //======================================================
 505          // interrupt routines
 506          //======================================================
 507          
 508          //======================================================
 509          // peripheral setting routines
 510          //======================================================
 511          
 512          void clock_init()
 513          {
 514   1        // internal RC clock (1.000000MHz)
 515   1        // Nothing to do for the default clock
 516   1      }
 517          
 518          void UART_init()
 519          {
 520   1        // initialize UART interface
 521   1        // ASync. 9615bps N 8 1
 522   1        UARTCR2 = 0x02;   // activate UART
 523   1        UARTCR1 = 0x06;   // bit count, parity
 524   1        UARTCR2 |= 0x2F;  // interrupt, speed
 525   1        UARTCR3 = 0x00;   // stop bit
 526   1        UARTBD = 0x1D;    // baud rate 1D
 527   1        UARTST=0x60;    //UDRE TXC RXC WAKE SOFTRST DOR FE PE 
 528   1        // 0x40
 529   1      }
 530          
 531          void port_init()
 532          {
 533   1        // initialize ports
 534   1        P0IO = 0xFF;      // direction
 535   1        P0PU = 0x00;      // pullup
 536   1        P0OD = 0x00;      // open drain
 537   1        P03DB = 0x00;     // bit7~6(debounce clock), bit5~0=P35,P06~02 debounce
 538   1        P0   = 0x00;      // port initial value
 539   1      
 540   1        P1IO = 0xFF;      // direction
 541   1        P1PU = 0x00;      // pullup
 542   1        P1OD = 0x00;      // open drain
 543   1        P12DB = 0x00;     // debounce : P23~20, P13~10
 544   1        P1   = 0x00;      // port initial value
 545   1      
 546   1        P2IO = 0xFF;      // direction
 547   1        P2PU = 0x00;      // pullup
 548   1        P2OD = 0x00;      // open drain
 549   1        P2   = 0x00;      // port initial value
 550   1      
 551   1        P3IO = 0xFD;      // direction
C51 COMPILER V9.60.0.0   MAIN                                                              11/04/2021 13:44:53 PAGE 10  

 552   1        P3PU = 0x00;      // pullup
 553   1        P3OD = 0x00;      // open drain
 554   1        P3   = 0x00;      // port initial value
 555   1      
 556   1        // Set port functions
 557   1        P0FSR = 0x00;     // P0 selection
 558   1        P1FSRH = 0x00;    // P1 selection High
 559   1        P1FSRL = 0x00;    // P1 selection Low
 560   1        P2FSR = 0x00;     // P2 selection
 561   1        // P3FSR = 0x00;    // P3 selection P35 GPIO mode
 562   1        P3FSR = 0x20;     // P3 selection P35 pwm mode
 563   1      }
 564          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1384    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     26       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
