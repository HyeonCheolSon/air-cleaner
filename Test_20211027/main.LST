C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //======================================================
   2          // Main program routine
   3          // - Device name  : MC96F8216
   4          // - Package type : 24QFN
   5          //======================================================
   6          // For XDATA variable : V1.041.00 ~
   7          #define   MAIN  1
   8          
   9          // Generated    : Wed, Aug 11, 2021 (12:44:11)
  10          #include  "MC96F8316.h"
  11          #include  "func_def.h"
  12          
  13          unsigned int i;
  14          unsigned int p;
  15          unsigned int count;
  16          unsigned int period;
  17          
  18          unsigned int led_switch = 0;
  19          
  20          ////////////PWM////////////////
  21          void controlPWM(int num)
  22          {
  23   1        if(num == 0)
  24   1        {
  25   2          T0DR = 0x00;
  26   2        }
  27   1        else if(num == 1)
  28   1        {
  29   2          T0DR = 0x8C; // 55%
  30   2        }
  31   1        else if(num == 2)
  32   1        {
  33   2          T0DR = 0xA6;
  34   2        }
  35   1        else if(num == 3)
  36   1        {
  37   2          T0DR = 0xCE;
  38   2        }
  39   1        else if(num == 4)
  40   1        {
  41   2          T0DR = 0xE7;
  42   2        }
  43   1        else if(num == 5)
  44   1        {
  45   2          T0DR = 0xFF;
  46   2        }
  47   1      }
  48          int tempMotor = 0x9B;
  49          void controlMotor(int num)
  50          {
  51   1        T0DR = tempMotor + num;
  52   1      }
  53          //////////////////////////////////
  54          
  55          /////////////////////LED////////////
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 2   

  56          void onRED()
  57          {
  58   1        offGREEN();
  59   1        offBLUE();
  60   1        P1 |= 0x02;
  61   1      }
  62          void offRED()
  63          {
  64   1        P1 &= 0xFD;
  65   1      }
  66          void onGREEN()
  67          {
  68   1        offRED();
  69   1        offBLUE();
  70   1        P1 |= 0x04;
  71   1      }
  72          void offGREEN()
  73          {
  74   1        P1 &= 0xFB;
  75   1      }
  76          void onBLUE()
  77          {
  78   1        offRED();
  79   1        offGREEN();
  80   1        P1 |= 0x08;
  81   1      }
  82          void offBLUE()
  83          {
  84   1        P1 &= 0xF7;
  85   1      }
  86          void onYELLOW()
  87          {
  88   1        if(led_switch == 0)
  89   1        {
  90   2          onRED();
  91   2        }
  92   1        else
  93   1        {
  94   2          onGREEN();
  95   2        }
  96   1      }
  97          void onMAGENTA()
  98          {
  99   1        if(led_switch == 0)
 100   1        {
 101   2          onRED();
 102   2        }
 103   1        else
 104   1        {
 105   2          onBLUE();
 106   2        }
 107   1      }
 108          
 109          void onCYAN()
 110          {
 111   1        if(led_switch == 0)
 112   1        {
 113   2          onGREEN();
 114   2        }
 115   1        else
 116   1        {
 117   2          onBLUE();
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 3   

 118   2        }
 119   1      }
 120          
 121          void onWHITE()
 122          {
 123   1        for(i = 0; i < 3; i++)
 124   1        {
 125   2          if(i==0)
 126   2          {
 127   3            onRED();
 128   3          }
 129   2          else if(i==1)
 130   2          {
 131   3            onGREEN();
 132   3          }
 133   2          else
 134   2          {
 135   3            onBLUE();
 136   3          }
 137   2        }
 138   1      }
 139          
 140          ///////////////////////////////////
 141          
 142          ////////RELAY//////////////////////
 143          void onRELAY()
 144          {
 145   1        P1 |= 0x20;
 146   1      }
 147          void offRELAY()
 148          {
 149   1        P1 &= 0xDF;
 150   1      }
 151          //////////////////////////////////////
 152          
 153          void delay_10us()
 154          {
 155   1        _nop_(); _nop_(); _nop_(); _nop_(); _nop_();
 156   1        _nop_(); _nop_(); _nop_(); _nop_(); 
 157   1      }
 158          
 159          void delay_sec(int num)
 160          {
 161   1        int i22;
 162   1        int j22;
 163   1        
 164   1        for(j22 = 0; j22 < num ; j22++)
 165   1          for(i22 = 0 ; i22<25000 ; i22++)
 166   1            delay_10us();
 167   1        
 168   1      }
 169          unsigned int led_color = 9;
 170          
 171          // T0 Interrupt///////////////
 172          void TIMER0_Int() interrupt 13
 173          {
 174   1        if(led_switch == 0)
 175   1        {
 176   2          led_switch = 1;
 177   2        }
 178   1        else
 179   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 4   

 180   2          led_switch = 0;
 181   2        }
 182   1        if(led_color == 0)
 183   1        {
 184   2          onRED();
 185   2        }
 186   1        else if(led_color == 1)
 187   1        {
 188   2          onYELLOW();
 189   2        }
 190   1        else if(led_color == 2)
 191   1        {
 192   2          onGREEN();
 193   2        }
 194   1        else if(led_color == 3)
 195   1        {
 196   2          onCYAN();
 197   2        }
 198   1        else if(led_color == 4)
 199   1        {
 200   2          onBLUE();
 201   2        }
 202   1        else if(led_color == 5)
 203   1        {
 204   2          onMAGENTA();
 205   2        }
 206   1        else if(led_color == 99)
 207   1        {
 208   2          offRED();
 209   2          offBLUE();
 210   2          offGREEN();
 211   2        }
 212   1      }
 213          int tmp = 0x00;
 214          int tmp_old = 0x00;
 215          int tmp_count = 0;
 216          int ctrl_variable = 0x00;
 217          void UARTRX_Int() interrupt 9
 218          {
 219   1        tmp_old = tmp;
 220   1        tmp = UARTDR;
 221   1        
 222   1        //if(tmp == tmp_old)
 223   1        //{
 224   1        //  tmp_count += 1;
 225   1        //  if(tmp_count == 2)
 226   1        //  {
 227   1        //    ctrl_variable = tmp;
 228   1        //    tmp_count = 0;
 229   1        //  }
 230   1        //}
 231   1        //else if(tmp != tmp_old)
 232   1        //{
 233   1        //  tmp_count = 0;
 234   1        //}
 235   1        
 236   1        P3FSR |= 0x01;
 237   1        UARTDR = tmp;
 238   1      }
 239          ///////////////////////////
 240          
 241          void main()
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 5   

 242          {
 243   1        cli();            // disable INT. during peripheral setting
 244   1        port_init();      // initialize ports
 245   1        //clock_init();     // initialize operation clock
 246   1        UART_init();
 247   1        sei();            // enable INT.
 248   1        
 249   1        // TODO: add your main code here
 250   1        T0CR = 0x92; // Timer 0 Control Register - PWM Mode P35
 251   1        
 252   1        //T1CRH = 0x80;
 253   1        //T1CRL = 0x20; // Timer 1 Low Control Register
 254   1        
 255   1        //offRED();
 256   1        //offGREEN();
 257   1        //offBLUE();
 258   1        //onRELAY();
 259   1        //controlPWM(0);
 260   1        IE2 = 0x02;
 261   1        IE1 = 0x08; // Rx Interrupt
 262   1        
 263   1        tmp = 0xFF;
 264   1        T0CR = 0x92;
 265   1      
 266   1        //T1CRL = 0x00;
 267   1        //T1CRH = 0x00;
 268   1        //T2CRL = 0x00;
 269   1        //T2CRH = 0x00;
 270   1        
 271   1        //P1FSRL = 0x00;
 272   1        //P1FSRH = 0x00;
 273   1        
 274   1        // P3FSR = 0x00;
 275   1        
 276   1        //T1ADRH = 0x00;
 277   1        ////T1ADRL = 0x00;
 278   1        //T1BDRH = 0x00;
 279   1        //T1BDRL = 0x00;
 280   1        
 281   1        //T2ADRH = 0x00;
 282   1        //T2ADRL = 0x00;
 283   1        //T2BDRH = 0x00;
 284   1        //T2BDRL = 0x00;
 285   1        
 286   1        // offRELAY();
 287   1        
 288   1        // P3 = 0x20;
 289   1      //  led_color = 3;
 290   1      //  controlPWM(1);// red
 291   1      //  led_color = 0;
 292   1      //  delay_sec(20);
 293   1      //  controlPWM(2);
 294   1      //  led_color = 1;// yellow
 295   1      //  delay_sec(20);
 296   1      //  controlPWM(3);
 297   1      //  led_color =2; // green
 298   1      //  delay_sec(20);
 299   1      //  controlPWM(4);
 300   1      //  led_color = 3; // cyan
 301   1      //  delay_sec(20);
 302   1        
 303   1      //  controlPWM(3);
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 6   

 304   1      //  led_color = 2; // green
 305   1      //  delay_sec(20);
 306   1      //  controlPWM(2);
 307   1      //  led_color = 1; // yellow
 308   1      //  delay_sec(20);
 309   1          UARTDR = 0xFF;
 310   1          T0DR = 0x00;
 311   1          led_color = 4;
 312   1        while(1)
 313   1        {
 314   2          
 315   2          // onRELAY();
 316   2          // controlPWM(3);
 317   2          // led_color = 0;
 318   2      
 319   2          
 320   2          
 321   2          // red 0
 322   2          // yellow 1
 323   2          // green 2
 324   2          // cyan 3 
 325   2          // blue 4
 326   2          // magenta 5
 327   2          //controlPWM(4);
 328   2          //tmp = UARTDR;
 329   2          
 330   2          //UARTDR = tmp;
 331   2          switch (tmp)
 332   2          {
 333   3          case 0xF1: // air condition GOOD scenario
 334   3            controlPWM(1);
 335   3            led_color = 3; //cyan
 336   3            onRELAY();
 337   3            break;
 338   3          case 0xF2: // air condition SOSO scenario
 339   3            controlPWM(2);
 340   3            led_color = 2; // green
 341   3            onRELAY();
 342   3            break;
 343   3          case 0xF3: // air condition BAD scenario
 344   3            controlPWM(3);
 345   3            led_color = 1; // yellow
 346   3            onRELAY();
 347   3            break;
 348   3          case 0xF4: // air condition VERY BAD scenario
 349   3            controlPWM(4);
 350   3            led_color = 0; // red
 351   3            onRELAY();
 352   3            break;
 353   3          
 354   3          /*
 355   3          case 0x01: 
 356   3            led_color = 0; // red
 357   3            break;
 358   3          case 0x02: 
 359   3            led_color = 2; // green
 360   3            break;
 361   3          case 0x03: 
 362   3            led_color = 4; // blue
 363   3            break;
 364   3          case 0x04: 
 365   3            led_color = 3; // cyan
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 7   

 366   3            break;
 367   3          case 0x05: 
 368   3            led_color = 1; // yellow
 369   3            break;
 370   3          case 0x06: 
 371   3            led_color = 5; // magenta
 372   3            break;
 373   3          */
 374   3          
 375   3      
 376   3          //case 0x01: 
 377   3          //  controlPWM(0); // 60% duration
 378   3          //  break;
 379   3          //case 0x02: 
 380   3          //  controlPWM(2); // 70% duration
 381   3          //  break;
 382   3          //case 0x03: 
 383   3          //  controlPWM(3); // 80% duration
 384   3          //  break;
 385   3          //case 0x04: 
 386   3          //  controlPWM(4); // 90% duration
 387   3          //  break;
 388   3          //case 0x05: 
 389   3          //  controlPWM(5); // 100% duration
 390   3          //  break;
 391   3          
 392   3          //case 0x21: 
 393   3          //  onRELAY(); // relay on
 394   3          //  break;
 395   3          //case 0x22: 
 396   3          //  offRELAY(); // relay off
 397   3          //  break;
 398   3          }
 399   2          /*
 400   2          if(tmp > 0x00 && tmp < 0x65)
 401   2          {
 402   2            controlMotor(tmp);
 403   2          }
 404   2          */
 405   2        }
 406   1      }
 407          
 408          //======================================================
 409          // interrupt routines
 410          //======================================================
 411          
 412          //======================================================
 413          // peripheral setting routines
 414          //======================================================
 415          
 416          void clock_init()
 417          {
 418   1        // internal RC clock (1.000000MHz)
 419   1        // Nothing to do for the default clock
 420   1      }
 421          
 422          void UART_init()
 423          {
 424   1        // initialize UART interface
 425   1        // ASync. 9615bps N 8 1
 426   1        UARTCR2 = 0x02;   // activate UART
 427   1        UARTCR1 = 0x06;   // bit count, parity
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2021 14:47:08 PAGE 8   

 428   1        UARTCR2 |= 0x2F;  // interrupt, speed
 429   1        UARTCR3 = 0x00;   // stop bit
 430   1        UARTBD = 0x1D;    // baud rate 1D
 431   1        UARTST=0x60;    //UDRE TXC RXC WAKE SOFTRST DOR FE PE 
 432   1        // 0x40
 433   1      }
 434          
 435          void port_init()
 436          {
 437   1        // initialize ports
 438   1        P0IO = 0xFF;      // direction
 439   1        P0PU = 0x00;      // pullup
 440   1        P0OD = 0x00;      // open drain
 441   1        P03DB = 0x00;     // bit7~6(debounce clock), bit5~0=P35,P06~02 debounce
 442   1        P0   = 0x00;      // port initial value
 443   1      
 444   1        P1IO = 0xFF;      // direction
 445   1        P1PU = 0x00;      // pullup
 446   1        P1OD = 0x00;      // open drain
 447   1        P12DB = 0x00;     // debounce : P23~20, P13~10
 448   1        P1   = 0x00;      // port initial value
 449   1      
 450   1        P2IO = 0xFF;      // direction
 451   1        P2PU = 0x00;      // pullup
 452   1        P2OD = 0x00;      // open drain
 453   1        P2   = 0x00;      // port initial value
 454   1      
 455   1        P3IO = 0xFD;      // direction
 456   1        P3PU = 0x00;      // pullup
 457   1        P3OD = 0x00;      // open drain
 458   1        P3   = 0x00;      // port initial value
 459   1      
 460   1        // Set port functions
 461   1        P0FSR = 0x00;     // P0 selection
 462   1        P1FSRH = 0x00;    // P1 selection High
 463   1        P1FSRL = 0x00;    // P1 selection Low
 464   1        P2FSR = 0x00;     // P2 selection
 465   1        // P3FSR = 0x00;    // P3 selection P35 GPIO mode
 466   1        P3FSR = 0x20;     // P3 selection P35 pwm mode
 467   1      }
 468          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    759    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
